namespace System
{
    /// <summary>
    /// Defines logic that allows an application to interact with its environment.
    /// </summary>
    public static class Environment
    {
        /// <summary>
        /// Initializes the environment.
        /// </summary>
        /// <param name="argc">
        /// The number of command-line arguments.
        /// </param>
        /// <param name="argv">
        /// An array of command-line arguments, each represented as a C-style string.
        /// </param>
        /// <returns>An array of strings that can be passed to an entry point.</returns>
        /// <remarks>
        /// Only code generated by the compiler should touch this method; it is inaccessible to user code.
        /// </remarks>
        [#builtin_hidden]
        public static string[] Initialize(int argc, byte* * argv)
        {
            int newArgc = Math.Max(0, argc - 1);
            var stringArray = new string[newArgc];
            for (int i = 1; i < argc; i++)
            {
                stringArray[i - 1] = String.FromCString(argv[i]);
            }
            return stringArray;
        }

        /// <summary>
        /// Gets the newline string.
        /// </summary>
        public static string NewLine => "\n";
    }
}