init
{
    rt-flo-filename = ../runtime/bin/flo/runtime.flo;
    // rt-obj-filename = ../runtime/bin/native/runtime.o;
    rt-obj-filename = ../runtime/bin/native/runtime-opt.ll;
    stdlib-flo-filename = ../stdlib/bin/flo/system-console.flo ../stdlib/bin/flo/system-io.flo ../stdlib/bin/flo/system-text.flo ../stdlib/bin/flo/system-threading.flo ../stdlib/bin/flo/corlib.flo;

    // Compiles input-file to a native executable and ensures
    // that its output matches the oracle.
    template CheckOutput<input-file, input, oracle>
    {
        run
        {
            // Run the executable and gather its output.
            return = @($exe-filename $input);
        }

        build
        {
            // Create some temporary files.
            flo-filename = @($create-temp-file flo);
            ll-filename = @($create-temp-file ll);
            exe-filename = @($create-temp-file exe);

            // Compile the C# source code to Flame IR.
            $ecsc $input-file -platform ir -environment llvm -Wno-build -fignore-main-prototype --rt-libs $stdlib-flo-filename -o $flo-filename;

            // Compile the Flame IR to LLVM IR.
            $flame-llvm $flo-filename $stdlib-flo-filename -platform llvm -Wno-build -o $ll-filename --rt-libs $rt-flo-filename;

            // Compile the LLVM IR to a native executable and link in
            // the C standard library.
            $clang $ll-filename $rt-obj-filename -O3 -lgc -lc++abi -pthreads -Wno-override-module -o $exe-filename;
        }

        init
        {
            // Set the expected return value.
            return = $oracle;
        }
    }
}

tests
{
    template CheckOutput<abstract/abstract.cs, , 111 161>;
    template CheckOutput<array/array.cs, aloha, aloha>;
    template CheckOutput<boxing/boxing.cs, , False True False 1>;
    template CheckOutput<compare-exchange/compare-exchange.cs, , 10 5>;
    template CheckOutput<custom-delegates/custom-delegates.cs, , 100 100>;
    template CheckOutput<delegates/delegates.cs, , 100>;
    template CheckOutput<echo/echo.cs, howdy, howdy>;
    template CheckOutput<enum/enum.cs, , True>;
    template CheckOutput<fibonacci/fibonacci.cs, 6, 8>;
    // Finalizers test disabled because finalizers aren't fully functional yet
    // template CheckOutput<finalizer/finalizer.cs, 6, 8>;
    template CheckOutput<floating-point/floating-point.cs, , -3628800>;
    template CheckOutput<fractal/fractal.cs, , Mandelbrot:6839743 Julia:6449238>;
    template CheckOutput<gc/main.cs, gc, gc>;
    template CheckOutput<generics/generics.cs, , 14 42>;
    template CheckOutput<hash-code/hash-code.cs, , False True False True>;
    template CheckOutput<hello-world/hello-world.cs, , hi>;
    template CheckOutput<inheritance/inheritance.cs, , 0 -22 45 100 True True True True False False>;
    template CheckOutput<interface/interface.cs, , 2 3>;
    template CheckOutput<linked-list/linked-list.cs, , 1 2 4 8 16 32 64 128 256 512 1024>;
    template CheckOutput<property/property.cs, hello, hello>;
    template CheckOutput<static/static.cs, static-test, static-test>;
    template CheckOutput<static-ctor/static-ctor.cs, , hello world>;
    template CheckOutput<stdlib-echo/stdlib-echo.cs, howdy 🍵, howdy 🍵>;
    template CheckOutput<stdlib-hello-world/stdlib-hello-world.cs, , hi>;
    template CheckOutput<stdlib-list/stdlib-list.cs, , 10 42>;
    template CheckOutput<struct/struct.cs, struct-test, struct-test>;
    template CheckOutput<threading/threading.cs, , Computation successful. Result: 21.>;
    template CheckOutput<throw/throw.cs, , how are ya>;
    template CheckOutput<virtual-calls/virtual-calls.cs, , 28 113 150>;
    template CheckOutput<write-file/write-file.cs, @($create-temp-file txt), Write/read successful>;
}